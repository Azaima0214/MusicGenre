{"remainingRequest":"/Users/k17070kk/Flask_Predict_App-master/node_modules/thread-loader/dist/cjs.js!/Users/k17070kk/Flask_Predict_App-master/node_modules/babel-loader/lib/index.js!/Users/k17070kk/Flask_Predict_App-master/node_modules/quasar/src/directives/Intersection.js","dependencies":[{"path":"/Users/k17070kk/Flask_Predict_App-master/node_modules/quasar/src/directives/Intersection.js","mtime":499162500000},{"path":"/Users/k17070kk/Flask_Predict_App-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17070kk/Flask_Predict_App-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17070kk/Flask_Predict_App-master/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9Vc2Vycy9rMTcwNzBray9GbGFza19QcmVkaWN0X0FwcC1tYXN0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgeyBpc0RlZXBFcXVhbCB9IGZyb20gJy4uL3V0aWxzL2lzLmpzJzsKdmFyIGRlZmF1bHRDZmcgPSB7CiAgdGhyZXNob2xkOiAwLAogIHJvb3Q6IG51bGwsCiAgcm9vdE1hcmdpbjogJzBweCcKfTsKCmZ1bmN0aW9uIF91cGRhdGUoZWwsIGN0eCwgX3JlZikgewogIHZhciBtb2RpZmllcnMgPSBfcmVmLm1vZGlmaWVycywKICAgICAgdmFsdWUgPSBfcmVmLnZhbHVlOwogIGN0eC5vbmNlID0gbW9kaWZpZXJzLm9uY2U7CiAgdmFyIGhhbmRsZXIsIGNmZywgY2hhbmdlZDsKCiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJykgewogICAgaGFuZGxlciA9IHZhbHVlOwogICAgY2ZnID0gZGVmYXVsdENmZzsKICAgIGNoYW5nZWQgPSBjdHguY2ZnID09PSB2b2lkIDA7CiAgfSBlbHNlIHsKICAgIGhhbmRsZXIgPSB2YWx1ZS5oYW5kbGVyOwogICAgY2ZnID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdENmZywgdmFsdWUuY2ZnKTsKICAgIGNoYW5nZWQgPSBjdHguY2ZnID09PSB2b2lkIDAgfHwgaXNEZWVwRXF1YWwoY3R4LmNmZywgY2ZnKSA9PT0gZmFsc2U7CiAgfQoKICBpZiAoY3R4LmhhbmRsZXIgIT09IGhhbmRsZXIpIHsKICAgIGN0eC5oYW5kbGVyID0gaGFuZGxlcjsKICB9CgogIGlmIChjaGFuZ2VkID09PSB0cnVlKSB7CiAgICBjdHguY2ZnID0gY2ZnOwogICAgY3R4Lm9ic2VydmVyICE9PSB2b2lkIDAgJiYgY3R4Lm9ic2VydmVyLnVub2JzZXJ2ZShlbCk7CiAgICBjdHgub2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24gKF9yZWYyKSB7CiAgICAgIHZhciBfcmVmMyA9IF9zbGljZWRUb0FycmF5KF9yZWYyLCAxKSwKICAgICAgICAgIGVudHJ5ID0gX3JlZjNbMF07CgogICAgICBpZiAodHlwZW9mIGN0eC5oYW5kbGVyID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgdmFyIHJlcyA9IGN0eC5oYW5kbGVyKGVudHJ5LCBjdHgub2JzZXJ2ZXIpOwoKICAgICAgICBpZiAocmVzID09PSBmYWxzZSB8fCBjdHgub25jZSA9PT0gdHJ1ZSAmJiBlbnRyeS5pc0ludGVyc2VjdGluZyA9PT0gdHJ1ZSkgewogICAgICAgICAgZGVzdHJveShlbCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBjZmcpOwogICAgY3R4Lm9ic2VydmVyLm9ic2VydmUoZWwpOwogIH0KfQoKZnVuY3Rpb24gZGVzdHJveShlbCkgewogIHZhciBjdHggPSBlbC5fX3F2aXNpYmxlOwoKICBpZiAoY3R4ICE9PSB2b2lkIDApIHsKICAgIGN0eC5vYnNlcnZlciAhPT0gdm9pZCAwICYmIGN0eC5vYnNlcnZlci51bm9ic2VydmUoZWwpOwogICAgZGVsZXRlIGVsLl9fcXZpc2libGU7CiAgfQp9CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2ludGVyc2VjdGlvbicsCiAgaW5zZXJ0ZWQ6IGZ1bmN0aW9uIGluc2VydGVkKGVsLCBiaW5kaW5nKSB7CiAgICB2YXIgY3R4ID0ge307CgogICAgX3VwZGF0ZShlbCwgY3R4LCBiaW5kaW5nKTsKCiAgICBlbC5fX3F2aXNpYmxlID0gY3R4OwogIH0sCiAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoZWwsIGJpbmRpbmcpIHsKICAgIHZhciBjdHggPSBlbC5fX3F2aXNpYmxlOwogICAgY3R4ICE9PSB2b2lkIDAgJiYgX3VwZGF0ZShlbCwgY3R4LCBiaW5kaW5nKTsKICB9LAogIHVuYmluZDogZGVzdHJveQp9Ow=="},{"version":3,"sources":["/Users/k17070kk/Flask_Predict_App-master/node_modules/quasar/src/directives/Intersection.js"],"names":["isDeepEqual","defaultCfg","threshold","root","rootMargin","update","el","ctx","modifiers","value","once","handler","cfg","changed","Object","assign","observer","unobserve","IntersectionObserver","entry","res","isIntersecting","destroy","observe","__qvisible","name","inserted","binding","unbind"],"mappings":"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","sourcesContent":["import { isDeepEqual } from '../utils/is.js'\n\nconst defaultCfg = {\n  threshold: 0,\n  root: null,\n  rootMargin: '0px'\n}\n\nfunction update (el, ctx, { modifiers, value }) {\n  ctx.once = modifiers.once\n\n  let handler, cfg, changed\n\n  if (typeof value === 'function') {\n    handler = value\n    cfg = defaultCfg\n    changed = ctx.cfg === void 0\n  }\n  else {\n    handler = value.handler\n    cfg = Object.assign({}, defaultCfg, value.cfg)\n    changed = ctx.cfg === void 0 || isDeepEqual(ctx.cfg, cfg) === false\n  }\n\n  if (ctx.handler !== handler) {\n    ctx.handler = handler\n  }\n\n  if (changed === true) {\n    ctx.cfg = cfg\n    ctx.observer !== void 0 && ctx.observer.unobserve(el)\n\n    ctx.observer = new IntersectionObserver(([ entry ]) => {\n      if (typeof ctx.handler === 'function') {\n        const res = ctx.handler(entry, ctx.observer)\n\n        if (\n          res === false ||\n          (ctx.once === true && entry.isIntersecting === true)\n        ) {\n          destroy(el)\n        }\n      }\n    }, cfg)\n\n    ctx.observer.observe(el)\n  }\n}\n\nfunction destroy (el) {\n  const ctx = el.__qvisible\n\n  if (ctx !== void 0) {\n    ctx.observer !== void 0 && ctx.observer.unobserve(el)\n    delete el.__qvisible\n  }\n}\n\nexport default {\n  name: 'intersection',\n\n  inserted (el, binding) {\n    const ctx = {}\n    update(el, ctx, binding)\n    el.__qvisible = ctx\n  },\n\n  update (el, binding) {\n    const ctx = el.__qvisible\n    ctx !== void 0 && update(el, ctx, binding)\n  },\n\n  unbind: destroy\n}\n"]}]}