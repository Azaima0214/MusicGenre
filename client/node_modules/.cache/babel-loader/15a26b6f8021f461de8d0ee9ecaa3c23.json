{"remainingRequest":"/Users/k17070kk/Flask_Predict_App-master/node_modules/thread-loader/dist/cjs.js!/Users/k17070kk/Flask_Predict_App-master/node_modules/babel-loader/lib/index.js!/Users/k17070kk/Flask_Predict_App-master/node_modules/quasar/src/ssr-update.js","dependencies":[{"path":"/Users/k17070kk/Flask_Predict_App-master/node_modules/quasar/src/ssr-update.js","mtime":499162500000},{"path":"/Users/k17070kk/Flask_Predict_App-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17070kk/Flask_Predict_App-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17070kk/Flask_Predict_App-master/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvazE3MDcwa2svRmxhc2tfUHJlZGljdF9BcHAtbWFzdGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IHsgJHEsIHF1ZXVlcyB9IGZyb20gJy4vaW5zdGFsbC5qcyc7CnZhciBtaXhpbiA9IHsKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBxdWV1ZXMudGFrZW92ZXIuZm9yRWFjaChmdW5jdGlvbiAocnVuKSB7CiAgICAgIHJ1bihfdGhpcy4kcSk7CiAgICB9KTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChjdHgpIHsKICBpZiAoY3R4LnNzcikgewogICAgdmFyIHEgPSBfb2JqZWN0U3ByZWFkKHt9LCAkcSk7CgogICAgT2JqZWN0LmFzc2lnbihjdHguc3NyLCB7CiAgICAgIFFfSEVBRF9UQUdTOiAnJywKICAgICAgUV9CT0RZX0FUVFJTOiAnJywKICAgICAgUV9CT0RZX1RBR1M6ICcnCiAgICB9KTsKICAgIHF1ZXVlcy5zZXJ2ZXIuZm9yRWFjaChmdW5jdGlvbiAocnVuKSB7CiAgICAgIHJ1bihxLCBjdHgpOwogICAgfSk7CiAgICBjdHguYXBwLiRxID0gcTsKICB9IGVsc2UgewogICAgdmFyIG1peGlucyA9IGN0eC5hcHAubWl4aW5zIHx8IFtdOwoKICAgIGlmIChtaXhpbnMuaW5jbHVkZXMobWl4aW4pID09PSBmYWxzZSkgewogICAgICBjdHguYXBwLm1peGlucyA9IG1peGlucy5jb25jYXQobWl4aW4pOwogICAgfQogIH0KfQ=="},{"version":3,"sources":["/Users/k17070kk/Flask_Predict_App-master/node_modules/quasar/src/ssr-update.js"],"names":["$q","queues","mixin","mounted","takeover","forEach","run","ctx","ssr","q","Object","assign","Q_HEAD_TAGS","Q_BODY_ATTRS","Q_BODY_TAGS","server","app","mixins","includes","concat"],"mappings":";;;;;;AAAA,SAASA,EAAT,EAAaC,MAAb,QAA2B,cAA3B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,OADY,qBACD;AAAA;;AACTF,IAAAA,MAAM,CAACG,QAAP,CAAgBC,OAAhB,CAAwB,UAAAC,GAAG,EAAI;AAC7BA,MAAAA,GAAG,CAAC,KAAI,CAACN,EAAN,CAAH;AACD,KAFD;AAGD;AALW,CAAd;AAQA,eAAe,UAAUO,GAAV,EAAe;AAC5B,MAAIA,GAAG,CAACC,GAAR,EAAa;AACX,QAAMC,CAAC,qBAAQT,EAAR,CAAP;;AAEAU,IAAAA,MAAM,CAACC,MAAP,CAAcJ,GAAG,CAACC,GAAlB,EAAuB;AACrBI,MAAAA,WAAW,EAAE,EADQ;AAErBC,MAAAA,YAAY,EAAE,EAFO;AAGrBC,MAAAA,WAAW,EAAE;AAHQ,KAAvB;AAMAb,IAAAA,MAAM,CAACc,MAAP,CAAcV,OAAd,CAAsB,UAAAC,GAAG,EAAI;AAC3BA,MAAAA,GAAG,CAACG,CAAD,EAAIF,GAAJ,CAAH;AACD,KAFD;AAIAA,IAAAA,GAAG,CAACS,GAAJ,CAAQhB,EAAR,GAAaS,CAAb;AACD,GAdD,MAeK;AACH,QAAMQ,MAAM,GAAGV,GAAG,CAACS,GAAJ,CAAQC,MAAR,IAAkB,EAAjC;;AACA,QAAIA,MAAM,CAACC,QAAP,CAAgBhB,KAAhB,MAA2B,KAA/B,EAAsC;AACpCK,MAAAA,GAAG,CAACS,GAAJ,CAAQC,MAAR,GAAiBA,MAAM,CAACE,MAAP,CAAcjB,KAAd,CAAjB;AACD;AACF;AACF","sourcesContent":["import { $q, queues } from './install.js'\n\nconst mixin = {\n  mounted () {\n    queues.takeover.forEach(run => {\n      run(this.$q)\n    })\n  }\n}\n\nexport default function (ctx) {\n  if (ctx.ssr) {\n    const q = { ...$q }\n\n    Object.assign(ctx.ssr, {\n      Q_HEAD_TAGS: '',\n      Q_BODY_ATTRS: '',\n      Q_BODY_TAGS: ''\n    })\n\n    queues.server.forEach(run => {\n      run(q, ctx)\n    })\n\n    ctx.app.$q = q\n  }\n  else {\n    const mixins = ctx.app.mixins || []\n    if (mixins.includes(mixin) === false) {\n      ctx.app.mixins = mixins.concat(mixin)\n    }\n  }\n}\n"]}]}